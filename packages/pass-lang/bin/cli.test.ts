import { execSync } from "child_process";
import * as fs from "fs";

describe("cli", () => {
  test("without arguments", () => {
    expect(execSync("node ./packages/pass-lang/bin/cli.js"))
      .toMatchInlineSnapshot(`
      Object {
        "data": Array [
          80,
          114,
          111,
          99,
          101,
          115,
          115,
          105,
          110,
          103,
          32,
          48,
          32,
          102,
          105,
          108,
          101,
          115,
          40,
          44,
          32,
          46,
          46,
          46,
          41,
          10,
        ],
        "type": "Buffer",
      }
    `);
  });

  test("get version", () => {
    expect(execSync("node ./packages/pass-lang/bin/cli.js -v"))
      .toMatchInlineSnapshot(`
      Object {
        "data": Array [
          48,
          46,
          48,
          46,
          49,
          10,
        ],
        "type": "Buffer",
      }
    `);
    expect(execSync("node ./packages/pass-lang/bin/cli.js --version"))
      .toMatchInlineSnapshot(`
      Object {
        "data": Array [
          48,
          46,
          48,
          46,
          49,
          10,
        ],
        "type": "Buffer",
      }
    `);
  });

  test("get help", () => {
    expect(execSync("node ./packages/pass-lang/bin/cli.js -h"))
      .toMatchInlineSnapshot(`
      Object {
        "data": Array [
          71,
          101,
          110,
          101,
          114,
          97,
          116,
          101,
          32,
          99,
          115,
          115,
          32,
          102,
          114,
          111,
          109,
          32,
          115,
          111,
          117,
          114,
          99,
          101,
          32,
          102,
          105,
          108,
          101,
          115,
          32,
          116,
          104,
          97,
          116,
          32,
          99,
          111,
          110,
          116,
          97,
          105,
          110,
          105,
          110,
          103,
          32,
          100,
          101,
          102,
          97,
          117,
          108,
          116,
          32,
          101,
          120,
          112,
          111,
          114,
          116,
          115,
          46,
          10,
          85,
          115,
          97,
          103,
          101,
          58,
          10,
          32,
          32,
          112,
          97,
          115,
          115,
          45,
          108,
          97,
          110,
          103,
          32,
          102,
          105,
          108,
          101,
          110,
          97,
          109,
          101,
          32,
          91,
          45,
          111,
          61,
          60,
          111,
          117,
          116,
          102,
          105,
          108,
          101,
          62,
          93,
          32,
          91,
          45,
          100,
          93,
          10,
          32,
          32,
          112,
          97,
          115,
          115,
          45,
          108,
          97,
          110,
          103,
          32,
          103,
          108,
          111,
          98,
          32,
          91,
          45,
          111,
          61,
          60,
          111,
          117,
          116,
          100,
          105,
          114,
          62,
          93,
          32,
          91,
          45,
          100,
          93,
          10,
          79,
          112,
          116,
          105,
          111,
          110,
          115,
          58,
          10,
          32,
          32,
          45,
          104,
          44,
          32,
          45,
          45,
          104,
          101,
          108,
          112,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          80,
          114,
          105,
          110,
          116,
          32,
          116,
          104,
          105,
          115,
          32,
          104,
          101,
          108,
          112,
          32,
          109,
          101,
          115,
          115,
          97,
          103,
          101,
          32,
          97,
          110,
          100,
          32,
          101,
          120,
          105,
          116,
          46,
          10,
          32,
          32,
          45,
          118,
          44,
          32,
          45,
          45,
          118,
          101,
          114,
          115,
          105,
          111,
          110,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          80,
          114,
          105,
          110,
          116,
          32,
          112,
          97,
          115,
          115,
          45,
          108,
          97,
          110,
          103,
          32,
          99,
          117,
          114,
          114,
          101,
          110,
          116,
          32,
          118,
          101,
          114,
          115,
          105,
          111,
          110,
          32,
          97,
          110,
          100,
          32,
          101,
          120,
          105,
          116,
          46,
          10,
          32,
          32,
          45,
          100,
          44,
          32,
          45,
          45,
          100,
          101,
          118,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          69,
          110,
          97,
          98,
          108,
          101,
          32,
          104,
          111,
          116,
          32,
          114,
          101,
          108,
          111,
          97,
          100,
          32,
          97,
          110,
          100,
          32,
          119,
          97,
          116,
          99,
          104,
          32,
          109,
          111,
          100,
          101,
          46,
          10,
          32,
          32,
          45,
          111,
          44,
          32,
          45,
          45,
          111,
          117,
          116,
          112,
          117,
          116,
          32,
          80,
          65,
          84,
          72,
          32,
          32,
          32,
          32,
          32,
          83,
          101,
          116,
          32,
          111,
          117,
          116,
          112,
          117,
          116,
          32,
          99,
          115,
          115,
          32,
          102,
          105,
          108,
          101,
          32,
          112,
          97,
          116,
          104,
          46,
          10,
          32,
          32,
          45,
          105,
          44,
          32,
          45,
          45,
          105,
          110,
          105,
          116,
          32,
          80,
          65,
          84,
          72,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          83,
          116,
          97,
          114,
          116,
          32,
          97,
          32,
          110,
          101,
          119,
          32,
          112,
          114,
          111,
          106,
          101,
          99,
          116,
          32,
          111,
          110,
          32,
          116,
          104,
          101,
          32,
          112,
          97,
          116,
          104,
          46,
          10,
          10,
        ],
        "type": "Buffer",
      }
    `);
    expect(execSync("node ./packages/pass-lang/bin/cli.js --help"))
      .toMatchInlineSnapshot(`
      Object {
        "data": Array [
          71,
          101,
          110,
          101,
          114,
          97,
          116,
          101,
          32,
          99,
          115,
          115,
          32,
          102,
          114,
          111,
          109,
          32,
          115,
          111,
          117,
          114,
          99,
          101,
          32,
          102,
          105,
          108,
          101,
          115,
          32,
          116,
          104,
          97,
          116,
          32,
          99,
          111,
          110,
          116,
          97,
          105,
          110,
          105,
          110,
          103,
          32,
          100,
          101,
          102,
          97,
          117,
          108,
          116,
          32,
          101,
          120,
          112,
          111,
          114,
          116,
          115,
          46,
          10,
          85,
          115,
          97,
          103,
          101,
          58,
          10,
          32,
          32,
          112,
          97,
          115,
          115,
          45,
          108,
          97,
          110,
          103,
          32,
          102,
          105,
          108,
          101,
          110,
          97,
          109,
          101,
          32,
          91,
          45,
          111,
          61,
          60,
          111,
          117,
          116,
          102,
          105,
          108,
          101,
          62,
          93,
          32,
          91,
          45,
          100,
          93,
          10,
          32,
          32,
          112,
          97,
          115,
          115,
          45,
          108,
          97,
          110,
          103,
          32,
          103,
          108,
          111,
          98,
          32,
          91,
          45,
          111,
          61,
          60,
          111,
          117,
          116,
          100,
          105,
          114,
          62,
          93,
          32,
          91,
          45,
          100,
          93,
          10,
          79,
          112,
          116,
          105,
          111,
          110,
          115,
          58,
          10,
          32,
          32,
          45,
          104,
          44,
          32,
          45,
          45,
          104,
          101,
          108,
          112,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          80,
          114,
          105,
          110,
          116,
          32,
          116,
          104,
          105,
          115,
          32,
          104,
          101,
          108,
          112,
          32,
          109,
          101,
          115,
          115,
          97,
          103,
          101,
          32,
          97,
          110,
          100,
          32,
          101,
          120,
          105,
          116,
          46,
          10,
          32,
          32,
          45,
          118,
          44,
          32,
          45,
          45,
          118,
          101,
          114,
          115,
          105,
          111,
          110,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          80,
          114,
          105,
          110,
          116,
          32,
          112,
          97,
          115,
          115,
          45,
          108,
          97,
          110,
          103,
          32,
          99,
          117,
          114,
          114,
          101,
          110,
          116,
          32,
          118,
          101,
          114,
          115,
          105,
          111,
          110,
          32,
          97,
          110,
          100,
          32,
          101,
          120,
          105,
          116,
          46,
          10,
          32,
          32,
          45,
          100,
          44,
          32,
          45,
          45,
          100,
          101,
          118,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          69,
          110,
          97,
          98,
          108,
          101,
          32,
          104,
          111,
          116,
          32,
          114,
          101,
          108,
          111,
          97,
          100,
          32,
          97,
          110,
          100,
          32,
          119,
          97,
          116,
          99,
          104,
          32,
          109,
          111,
          100,
          101,
          46,
          10,
          32,
          32,
          45,
          111,
          44,
          32,
          45,
          45,
          111,
          117,
          116,
          112,
          117,
          116,
          32,
          80,
          65,
          84,
          72,
          32,
          32,
          32,
          32,
          32,
          83,
          101,
          116,
          32,
          111,
          117,
          116,
          112,
          117,
          116,
          32,
          99,
          115,
          115,
          32,
          102,
          105,
          108,
          101,
          32,
          112,
          97,
          116,
          104,
          46,
          10,
          32,
          32,
          45,
          105,
          44,
          32,
          45,
          45,
          105,
          110,
          105,
          116,
          32,
          80,
          65,
          84,
          72,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          32,
          83,
          116,
          97,
          114,
          116,
          32,
          97,
          32,
          110,
          101,
          119,
          32,
          112,
          114,
          111,
          106,
          101,
          99,
          116,
          32,
          111,
          110,
          32,
          116,
          104,
          101,
          32,
          112,
          97,
          116,
          104,
          46,
          10,
          10,
        ],
        "type": "Buffer",
      }
    `);
  });

  test("javascript file", () => {
    expect(
      execSync("node ./packages/pass-lang/bin/cli.js __test__/javascript.js")
    ).toMatchInlineSnapshot(`
      Object {
        "data": Array [
          80,
          114,
          111,
          99,
          101,
          115,
          115,
          105,
          110,
          103,
          32,
          49,
          32,
          102,
          105,
          108,
          101,
          115,
          40,
          95,
          95,
          116,
          101,
          115,
          116,
          95,
          95,
          47,
          106,
          97,
          118,
          97,
          115,
          99,
          114,
          105,
          112,
          116,
          46,
          106,
          115,
          44,
          32,
          46,
          46,
          46,
          41,
          10,
          83,
          117,
          99,
          99,
          101,
          115,
          115,
          102,
          117,
          108,
          108,
          121,
          32,
          98,
          117,
          105,
          108,
          116,
          32,
          34,
          95,
          95,
          116,
          101,
          115,
          116,
          95,
          95,
          47,
          106,
          97,
          118,
          97,
          115,
          99,
          114,
          105,
          112,
          116,
          46,
          106,
          115,
          34,
          10,
        ],
        "type": "Buffer",
      }
    `);
    expect(
      fs.readFileSync("__test__/javascript.css").toString()
    ).toMatchInlineSnapshot(`"js"`);
    fs.unlinkSync("__test__/javascript.css");
  });

  test("typescript file", () => {
    expect(
      execSync("node ./packages/pass-lang/bin/cli.js __test__/typescript.ts")
    ).toMatchInlineSnapshot(`
      Object {
        "data": Array [
          80,
          114,
          111,
          99,
          101,
          115,
          115,
          105,
          110,
          103,
          32,
          49,
          32,
          102,
          105,
          108,
          101,
          115,
          40,
          95,
          95,
          116,
          101,
          115,
          116,
          95,
          95,
          47,
          116,
          121,
          112,
          101,
          115,
          99,
          114,
          105,
          112,
          116,
          46,
          116,
          115,
          44,
          32,
          46,
          46,
          46,
          41,
          10,
          83,
          117,
          99,
          99,
          101,
          115,
          115,
          102,
          117,
          108,
          108,
          121,
          32,
          98,
          117,
          105,
          108,
          116,
          32,
          34,
          95,
          95,
          116,
          101,
          115,
          116,
          95,
          95,
          47,
          116,
          121,
          112,
          101,
          115,
          99,
          114,
          105,
          112,
          116,
          46,
          116,
          115,
          34,
          10,
        ],
        "type": "Buffer",
      }
    `);
    expect(
      fs.readFileSync("__test__/typescript.css").toString()
    ).toMatchInlineSnapshot(`"ts"`);
    fs.unlinkSync("__test__/typescript.css");
  });

  test("multiple files", () => {
    expect(execSync("node ./packages/pass-lang/bin/cli.js __test__/*"))
      .toMatchInlineSnapshot(`
      Object {
        "data": Array [
          80,
          114,
          111,
          99,
          101,
          115,
          115,
          105,
          110,
          103,
          32,
          50,
          32,
          102,
          105,
          108,
          101,
          115,
          40,
          95,
          95,
          116,
          101,
          115,
          116,
          95,
          95,
          47,
          106,
          97,
          118,
          97,
          115,
          99,
          114,
          105,
          112,
          116,
          46,
          106,
          115,
          44,
          32,
          46,
          46,
          46,
          41,
          10,
          83,
          117,
          99,
          99,
          101,
          115,
          115,
          102,
          117,
          108,
          108,
          121,
          32,
          98,
          117,
          105,
          108,
          116,
          32,
          34,
          95,
          95,
          116,
          101,
          115,
          116,
          95,
          95,
          47,
          106,
          97,
          118,
          97,
          115,
          99,
          114,
          105,
          112,
          116,
          46,
          106,
          115,
          34,
          10,
          83,
          117,
          99,
          99,
          101,
          115,
          115,
          102,
          117,
          108,
          108,
          121,
          32,
          98,
          117,
          105,
          108,
          116,
          32,
          34,
          95,
          95,
          116,
          101,
          115,
          116,
          95,
          95,
          47,
          116,
          121,
          112,
          101,
          115,
          99,
          114,
          105,
          112,
          116,
          46,
          116,
          115,
          34,
          10,
        ],
        "type": "Buffer",
      }
    `);
    expect(
      fs.readFileSync("__test__/javascript.css").toString()
    ).toMatchInlineSnapshot(`"js"`);
    fs.unlinkSync("__test__/javascript.css");
    expect(
      fs.readFileSync("__test__/typescript.css").toString()
    ).toMatchInlineSnapshot(`"ts"`);
    fs.unlinkSync("__test__/typescript.css");
  });
});
